name: Deploy TaskBoard

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}

      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}

  # Uncomment and configure for automatic deployment
  # deploy-to-kubernetes:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     
  #     - name: Configure kubectl
  #       uses: azure/k8s-set-context@v3
  #       with:
  #         method: kubeconfig
  #         kubeconfig: ${{ secrets.KUBE_CONFIG }}
  #     
  #     - name: Deploy to Kubernetes
  #       run: |
  #         kubectl apply -f deployment/kubernetes/
  #         kubectl rollout restart deployment/taskboard-backend -n taskboard
  #         kubectl rollout restart deployment/taskboard-frontend -n taskboard

  # deploy-to-vps:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   
  #   steps:
  #     - name: Deploy to VPS via SSH
  #       uses: appleboy/ssh-action@v1.0.0
  #       with:
  #         host: ${{ secrets.VPS_HOST }}
  #         username: ${{ secrets.VPS_USERNAME }}
  #         key: ${{ secrets.VPS_SSH_KEY }}
  #         script: |
  #           cd /path/to/task-board
  #           git pull origin main
  #           docker-compose -f docker-compose.prod.yml pull
  #           docker-compose -f docker-compose.prod.yml up -d

